library(here)
list.files(here("ICPI", "Data"))
list.files(here((Data"))
)
list.files(here(("Data"))
list.files(here("Data"))
list.files(here("RawData"))
pacman::p_load(tidyverse, here)
##   Data Pack COP FY18
##   A.Chafetz, USAID
##   Purpose: recreate South Sudan dataset to include Q1 and Q2 (missing in DATIm)
##   Date: Jan 31, 2017
library(tidyverse)
library(readxl)
#file path
loc <- "~/ICPI/Data/"
#import normal Fact View PSNUxIM
df_mer <- read_rds("~/ICPI/Data/ICPI_FactView_PSNU_IM_20171222_v2_2.Rds") %>%
#select just South Sudan
filter(operatingunit == "South Sudan") %>%
#remove quarters with missing data
select(-fy2017q1, -fy2017q2) %>%
#covert to character for easier mutate later
mutate(mechanismid = as.character(mechanismid),
coarsedisaggregate = as.character(coarsedisaggregate))
df_mer %>% distinct(indicator) %>% arrange(indictor)
df_mer %>% distinct(indicator) %>% arrange(indicator)
#import South Sudan's data
df_ssd_psnuim <- read_excel(file.path(loc, "SSudan PSNUxIM FactView Dec22V2.xlsx")) %>%
rename_all(tolower) %>%
#keep data only for quaters missing in FV dataset
select(region:ismcad, fy2017q1, fy2017q2) %>%
#convert to integer for merge
mutate_at(vars(fy2017q1, fy2017q2), funs(as.integer(.))) %>%
#convert to character for merge
mutate(mechanismid = as.character(mechanismid))
df_test %>%  <- full_join(df_mer, df_ssd_psnuim) %>%
#replace na's with 0's in order to add in mutate
replace_na(list(fy2017q1 = 0, fy2017q2 = 0, fy2017q3 = 0, fy2017q4 = 0)) %>%
#take Q4 value for annual and semi annual indicators, sum quaterly ones
mutate(fy2017apr = ifelse(((indicator %in% c("GEND_GBV", "KP_MAT", "TX_PVLS", "TX_RET",
"OVC_HIVSTAT", "TB_PREV")) | (indicator == "OVC_SERV" & otherdisaggregate == "Active")), "Snapshot",
"Cumulative"))
df_test %>%  <- full_join(df_mer, df_ssd_psnuim) %>%
#replace na's with 0's in order to add in mutate
replace_na(list(fy2017q1 = 0, fy2017q2 = 0)) %>%
#take Q4 value for annual and semi annual indicators, sum quaterly ones
mutate(fy2017apr = ifelse(((indicator %in% c("GEND_GBV", "KP_MAT", "TX_PVLS", "TX_RET",
"OVC_HIVSTAT", "TB_PREV")) | (indicator == "OVC_SERV" & otherdisaggregate == "Active")), "Snapshot",
"Cumulative"))
df_ssd_psnuim2 <- full_join(df_mer, df_ssd_psnuim) %>%
#replace na's with 0's in order to add in mutate
replace_na(list(fy2017q1 = 0, fy2017q2 = 0, fy2017q3 = 0, fy2017q4 = 0)) %>%
#take Q4 value for annual and semi annual indicators, sum quaterly ones
mutate(fy2017apr = ifelse(((indicator %in% c("GEND_GBV", "KP_MAT", "TX_PVLS", "TX_RET",
"OVC_HIVSTAT", "TB_PREV")) | (indicator == "OVC_SERV" & otherdisaggregate == "Active")), fy2017q4,
fy2017q1 + fy2017q2 + fy2017q3 + fy2017q4)) %>%
#reorder
select(region:fy2017_targets, fy2017q1, fy2017q2, fy2017q3, fy2017q4, fy2017apr, fy2018_targets)
rm(df_ssd_psnuim2)
df_ssd_psnuim2 <- full_join(df_mer, df_ssd_psnuim) %>%
#replace na's with 0's in order to add in mutate
replace_na(list(fy2017q1 = 0, fy2017q2 = 0, fy2017q3 = 0, fy2017q4 = 0))
rm(df_ssd_psnuim2)
df_ssd_psnuim2 <- full_join(df_mer, df_ssd_psnuim) %>%
#replace na's with 0's in order to add in mutate
replace_na(list(fy2017q1 = 0, fy2017q2 = 0, fy2017q3 = 0, fy2017q4 = 0))
rm(df_ssd_psnuim2)
df_test <- full_join(df_mer, df_ssd_psnuim) %>%
#replace na's with 0's in order to add in mutate
replace_na(list(fy2017q1 = 0, fy2017q2 = 0, fy2017q3 = 0, fy2017q4 = 0)) %>%
#take Q4 value for annual and semi annual indicators, sum quaterly ones
mutate(fy2017apr = ifelse(((indicator %in% c("GEND_GBV", "KP_MAT", "TX_PVLS", "TX_RET",
"OVC_HIVSTAT", "TB_PREV")) | (indicator == "OVC_SERV" & otherdisaggregate == "Active")), "Snapshot",
"Cumulative"))
df_test %>% distinct(indicator, fy2017apr) %>% arrange(indicator) %>% print(n=Inf)
df_test <- full_join(df_mer, df_ssd_psnuim) %>%
#replace na's with 0's in order to add in mutate
replace_na(list(fy2017q1 = 0, fy2017q2 = 0, fy2017q3 = 0, fy2017q4 = 0)) %>%
#take Q4 value for annual and semi annual indicators, sum quaterly ones
mutate(fy2017apr = ifelse((indicator %in% c("GEND_GBV", "KP_MAT", "TX_PVLS", "TX_RET",
"OVC_HIVSTAT", "TB_PREV")), "Snapshot", "Cumulative"),
fy2017apr = ifelse((indicator == "OVC_SERV" & otherdisaggregate == "Active"), "Snapshot", fy2017apr))
df_test %>% distinct(indicator, fy2017apr) %>% arrange(indicator) %>% print(n=Inf)
t2 <- filter(is.nat(fy2017apr))
t2 <- filter(is.na(fy2017apr))
t2 <- df_test %>% filter(is.na(fy2017apr))
View(t2)
df_test %>% distinct(indicator) %>% arrange(indicator) %>% print(n=Inf)
df_test <- full_join(df_mer, df_ssd_psnuim) %>%
#replace na's with 0's in order to add in mutate
replace_na(list(fy2017q1 = 0, fy2017q2 = 0, fy2017q3 = 0, fy2017q4 = 0)) %>%
#take Q4 value for annual and semi annual indicators, sum quaterly ones
mutate(fy2017apr = ifelse((indicator %in% c("GEND_GBV", "KP_MAT", "TX_PVLS", "TX_RET",
"OVC_HIVSTAT", "TB_PREV")), "Snapshot", "Cumulative"),
fy2017apr = ifelse((indicator == "OVC_SERV" & otherdisaggregate == "Active"), "Snapshot", fy2017apr))
df_test %>% distinct(indicator, fy2017apr) %>% arrange(indicator) %>% print(n=Inf)
t2 <- df_test %>%
filter(indicator == "OVC_SERV") %>%
distinct(indicator, standardizeddisaggregate, fy2017apr)
df_test %>%
filter(indicator == "OVC_SERV") %>%
distinct(indicator, standardizeddisaggregate, fy2017apr)
df_test <- full_join(df_mer, df_ssd_psnuim) %>%
#replace na's with 0's in order to add in mutate
replace_na(list(fy2017q1 = 0, fy2017q2 = 0, fy2017q3 = 0, fy2017q4 = 0)) %>%
#take Q4 value for annual and semi annual indicators, sum quaterly ones
mutate(fy2017apr = ifelse((indicator %in% c("GEND_GBV", "KP_MAT", "TX_PVLS", "TX_RET",
"OVC_HIVSTAT", "TB_PREV")), "Snapshot", "Cumulative"))
df_test %>% distinct(indicator, fy2017apr) %>% arrange(indicator) %>% print(n=Inf)
,
df_test <- df_test %>% mutate(fy2017apr = ifelse((indicator == "OVC_SERV" & otherdisaggregate == "Active"), "Snapshot", fy2017apr))
df_test <- df_test %>% mutate(fy2017apr = ifelse((indicator == "OVC_SERV" & otherdisaggregate == "Active"), "Snapshot", fy2017apr))
df_test %>% distinct(indicator, fy2017apr) %>% arrange(indicator) %>% print(n=Inf)
df_test %>%
filter(indicator == "OVC_SERV") %>%
distinct(indicator, standardizeddisaggregate, fy2017apr)
df_test <- full_join(df_mer, df_ssd_psnuim) %>%
#replace na's with 0's in order to add in mutate
replace_na(list(fy2017q1 = 0, fy2017q2 = 0, fy2017q3 = 0, fy2017q4 = 0)) %>%
#take Q4 value for annual and semi annual indicators, sum quaterly ones
mutate(fy2017apr = ifelse((indicator %in% c("GEND_GBV", "KP_MAT", "TX_PVLS", "TX_RET",
"OVC_HIVSTAT", "TB_PREV")), "Snapshot", "Cumulative"))
df_test %>%
filter(indicator == "OVC_SERV") %>%
distinct(indicator, standardizeddisaggregate, fy2017apr)
df_test %>%
mutate(fy2017apr2 = ifelse((indicator == "OVC_SERV" & otherdisaggregate == "Active"), "Snapshot", fy2017apr)) %>%
filter(indicator == "OVC_SERV") %>%
distinct(indicator, standardizeddisaggregate, fy2017apr, fy2017apr2)
df_test %>%
mutate(fy2017apr2 = ifelse((indicator == "OVC_SERV" & otherdisaggregate == "Active"), "Snapshot", fy2017apr)) %>%
filter(indicator == "OVC_SERV") %>%
distinct(indicator, standardizeddisaggregate, otherdisaggregate, fy2017apr, fy2017apr2)
df_test <- full_join(df_mer, df_ssd_psnuim) %>%
#replace na's with 0's in order to add in mutate
replace_na(list(fy2017q1 = 0, fy2017q2 = 0, fy2017q3 = 0, fy2017q4 = 0)) %>%
#take Q4 value for annual and semi annual indicators, sum quaterly ones
mutate(fy2017apr = ifelse((indicator %in% c("GEND_GBV", "KP_MAT", "TX_PVLS", "TX_RET",
"OVC_HIVSTAT", "TB_PREV")), "Snapshot", "Cumulative"))
df_test %>%
mutate(fy2017apr2 = ifelse((indicator == "OVC_SERV" & standardizeddisaggregate == "ProgramStatus" & otherdisaggregate == "Active"), "Snapshot", fy2017apr)) %>%
filter(indicator == "OVC_SERV") %>%
distinct(indicator, standardizeddisaggregate, otherdisaggregate, fy2017apr, fy2017apr2)
df_test <- full_join(df_mer, df_ssd_psnuim) %>%
#replace na's with 0's in order to add in mutate
replace_na(list(fy2017q1 = 0, fy2017q2 = 0, fy2017q3 = 0, fy2017q4 = 0)) %>%
#take Q4 value for annual and semi annual indicators, sum quaterly ones
mutate(fy2017apr = ifelse((indicator %in% c("GEND_GBV", "KP_MAT", "TX_PVLS", "TX_RET",
"OVC_HIVSTAT", "TB_PREV")), "Snapshot", "Cumulative"))
df_test <- df_test %>% mutate(fy2017apr = ifelse((indicator == "OVC_SERV" & standardizeddisaggregate == "ProgramStatus"& otherdisaggregate == "Active"), "Snapshot", fy2017apr))
df_test %>%
mutate(fy2017apr2 = ifelse((indicator == "OVC_SERV" & standardizeddisaggregate == "ProgramStatus" & otherdisaggregate == "Active"), "Snapshot", fy2017apr)) %>%
df_test %>%
filter(indicator == "OVC_SERV") %>%
distinct(indicator, standardizeddisaggregate, otherdisaggregate, fy2017apr, fy2017apr2)
df_test %>%
mutate(fy2017apr2 = ifelse((indicator == "OVC_SERV" & standardizeddisaggregate == "ProgramStatus" & otherdisaggregate == "Active"), "Snapshot", fy2017apr)) %>%
df_test %>%
filter(indicator == "OVC_SERV") %>%
distinct(indicator, standardizeddisaggregate, otherdisaggregate, fy2017apr)
df_test %>%
filter(indicator == "OVC_SERV") %>%
distinct(indicator, standardizeddisaggregate, fy2017apr)
df_test <- full_join(df_mer, df_ssd_psnuim) %>%
#replace na's with 0's in order to add in mutate
replace_na(list(fy2017q1 = 0, fy2017q2 = 0, fy2017q3 = 0, fy2017q4 = 0)) %>%
#take Q4 value for annual and semi annual indicators, sum quaterly ones
mutate(fy2017apr = ifelse(((indicator %in% c("GEND_GBV", "KP_MAT", "TX_PVLS", "TX_RET",
"OVC_HIVSTAT", "TB_PREV")) |
(indicator == "OVC_SERV" & standardizeddisaggregate == "ProgramStatus"& otherdisaggregate == "Active")),
"Snapshot", "Cumulative"))
df_test %>% distinct(indicator, fy2017apr) %>% arrange(indicator) %>% print(n=Inf)
df_test %>%
mutate(fy2017apr2 = ifelse((indicator == "OVC_SERV" & standardizeddisaggregate == "ProgramStatus" & otherdisaggregate == "Active"), "Snapshot", fy2017apr)) %>%
df_test %>%
filter(indicator == "OVC_SERV") %>%
distinct(indicator, standardizeddisaggregate, otherdisaggregate, fy2017apr)
df_test %>%
filter(indicator == "OVC_SERV") %>%
distinct(indicator, standardizeddisaggregate, fy2017apr)
df_test %>%
mutate_at(vars(starts_with("fy2017")), ifelse(. == 0, NA, . ))
df_test %>%
mutate_at(vars(starts_with("fy2017")), ~ifelse(. == 0, NA, . ))
df_test %>%
mutate_at(vars(starts_with("fy2017")), funs(ifelse(. == 0, NA, . )))
fv_data <- "~\ICPI\Data"
fv_data <- "~/ICPI/Data"
df_subnat <- read_rds(file.path(fvdata, paste0("ICPI_FactView_NAT_SUBNAT_20171222_v2_1.RDS")))
fvdata <- "~/ICPI/Data"
df_subnat <- read_rds(file.path(fvdata, paste0("ICPI_FactView_NAT_SUBNAT_20171222_v2_1.RDS")))
library(tidyverse)
fvdata <- "~/ICPI/Data"
list.files("~/ICPI/Data")
df_subnat <- read_rds(file.path(fvdata, paste0("ICPI_FactView_NAT_SUBNAT_*.RDS")))
df_subnat <- read_rds(Sys.glob(file.path(fvdata, paste0("ICPI_FactView_NAT_SUBNAT_*.RDS"))))
df_subnat <- read_rds(Sys.glob(file.path(fvdata, "ICPI_FactView_NAT_SUBNAT_*.RDS")))
df_subnat <- read_rds(Sys.glob(file.path(fvdata, "*ICPI_FactView_NAT_SUBNAT_*.RDS")))
df_subnat <- read_rds(Sys.glob(file.path(fvdata, "*ICPI_FactView_NAT_SUBNAT_*")))
rm(df_subnat)
df_subnat <- read_rds(Sys.glob(file.path(fvdata, "*ICPI_FactView_NAT_SUBNAT_*.Rds")))
rm(df_subnat)
read_rds(Sys.glob(file.path(fvdata, "ICPI_FactView_NAT_SUBNAT_*.Rds")))
##   Data Pack COP FY18
##   A.Chafetz, USAID
##   Purpose: recreate South Sudan dataset to include Q1 and Q2 (missing in DATIm)
##   Date: Jan 31, 2017
library(tidyverse)
library(readxl)
#file path
loc <- "~/ICPI/Data/"
#import normal Fact View PSNUxIM
df_mer <- read_rds("~/ICPI/Data/ICPI_FactView_PSNU_IM_20171222_v2_2.Rds") %>%
#select just South Sudan
filter(operatingunit == "South Sudan") %>%
#remove quarters with missing data
select(-fy2017q1, -fy2017q2) %>%
#covert to character for easier mutate later
mutate(mechanismid = as.character(mechanismid),
coarsedisaggregate = as.character(coarsedisaggregate))
#import South Sudan's data
df_ssd_psnuim <- read_excel(file.path(loc, "SSudan PSNUxIM FactView Dec22V2.xlsx")) %>%
rename_all(tolower) %>%
#keep data only for quaters missing in FV dataset
select(region:ismcad, fy2017q1, fy2017q2) %>%
#convert to integer for merge
mutate_at(vars(fy2017q1, fy2017q2), funs(as.integer(.))) %>%
#convert to character for merge
mutate(mechanismid = as.character(mechanismid))
#join FV and SSD provided datasets
df_ssd_psnuim <- full_join(df_mer, df_ssd_psnuim) %>%
#replace na's with 0's in order to add in mutate
replace_na(list(fy2017q1 = 0, fy2017q2 = 0, fy2017q3 = 0, fy2017q4 = 0)) %>%
#take Q4 value for annual and semi annual indicators, sum quaterly ones
mutate(fy2017apr = ifelse(((indicator %in% c("GEND_GBV", "KP_MAT", "TX_PVLS", "TX_RET",
"OVC_HIVSTAT", "TB_PREV")) |
(indicator == "OVC_SERV" & standardizeddisaggregate == "ProgramStatus"& otherdisaggregate == "Active")),
fy2017q4, fy2017q1 + fy2017q2 + fy2017q3 + fy2017q4)) %>%
#reorder
select(region:fy2017_targets, fy2017q1, fy2017q2, fy2017q3, fy2017q4, fy2017apr, fy2018_targets) %>%
#remove 0s
mutate_at(vars(starts_with("fy2017")), ifelse(. == 0, NA, . ))
loc <- "~/ICPI/Data/"
#import normal Fact View PSNUxIM
df_mer <- read_rds("~/ICPI/Data/ICPI_FactView_PSNU_IM_20171222_v2_2.Rds") %>%
#select just South Sudan
filter(operatingunit == "South Sudan") %>%
#remove quarters with missing data
select(-fy2017q1, -fy2017q2) %>%
#covert to character for easier mutate later
mutate(mechanismid = as.character(mechanismid),
coarsedisaggregate = as.character(coarsedisaggregate))
#import South Sudan's data
df_ssd_psnuim <- read_excel(file.path(loc, "SSudan PSNUxIM FactView Dec22V2.xlsx")) %>%
rename_all(tolower) %>%
#keep data only for quaters missing in FV dataset
select(region:ismcad, fy2017q1, fy2017q2) %>%
#convert to integer for merge
mutate_at(vars(fy2017q1, fy2017q2), funs(as.integer(.))) %>%
#convert to character for merge
mutate(mechanismid = as.character(mechanismid))
#join FV and SSD provided datasets
df_ssd_psnuim <- full_join(df_mer, df_ssd_psnuim) %>%
#replace na's with 0's in order to add in mutate
replace_na(list(fy2017q1 = 0, fy2017q2 = 0, fy2017q3 = 0, fy2017q4 = 0)) %>%
#take Q4 value for annual and semi annual indicators, sum quaterly ones
mutate(fy2017apr = ifelse(((indicator %in% c("GEND_GBV", "KP_MAT", "TX_PVLS", "TX_RET",
"OVC_HIVSTAT", "TB_PREV")) |
(indicator == "OVC_SERV" & standardizeddisaggregate == "ProgramStatus"& otherdisaggregate == "Active")),
fy2017q4, fy2017q1 + fy2017q2 + fy2017q3 + fy2017q4)) %>%
#reorder
select(region:fy2017_targets, fy2017q1, fy2017q2, fy2017q3, fy2017q4, fy2017apr, fy2018_targets) %>%
#remove 0s
mutate_at(vars(starts_with("fy2017")), ~ifelse(. == 0, NA, . ))
df_ssd_psnuim %>%
group_by(indicator, standardizeddisaggregate) %>%
summarize_at(vars(contains("fy2017q"), fy2017apr), ~sum(., na.rm = TRUE)) %>%
ungroup()
View(df_ssd_psnuim)
df_test <- df_ssd_psnuim %>%
group_by(indicator, standardizeddisaggregate) %>%
summarize_at(vars(contains("fy2017q"), fy2017apr), ~sum(., na.rm = TRUE)) %>%
ungroup()
View(df_test)
write_csv(df_test, "~/Downloads/ssd_apr.csv")
getwd()
write_csv(df_test, "C:/Users/achafetz/Downloads/ssd_apr.csv")
group_by(indicator, otherdisaggregate) %>%
summarize_at(vars(contains("fy2017q"), fy2017apr), ~sum(., na.rm = TRUE)) %>%
ungroup()
df_ssd_psnuim %>%
filter(standardizeddisaggregate == "ProgramStatus") %>%
group_by(indicator, otherdisaggregate) %>%
summarize_at(vars(contains("fy2017q"), fy2017apr), ~sum(., na.rm = TRUE)) %>%
ungroup()
df_mer %>%
filter(operatingunit == "South Sudan", standardizeddisaggregate == "ProgramStatus") %>%
group_by(indicator, otherdisaggregate) %>%
summarize_at(vars(contains("fy2017q"), fy2017apr), ~sum(., na.rm = TRUE)) %>%
ungroup()
read_excel(file.path(loc, "SSudan PSNUxIM FactView Dec22V2.xlsx")) %>%
rename_all(tolower) %>%
filter(operatingunit == "South Sudan", standardizeddisaggregate == "ProgramStatus") %>%
group_by(indicator, otherdisaggregate) %>%
summarize_at(vars(contains("fy2017q"), fy2017apr), ~sum(., na.rm = TRUE)) %>%
ungroup()
group_by(indicator, standardizeddisaggregate) %>%
summarize_at(vars(contains("fy2017q"), fy2017apr), ~sum(., na.rm = TRUE)) %>%
ungroup()
read_excel(file.path(loc, "SSudan PSNUxIM FactView Dec22V2.xlsx")) %>%
rename_all(tolower) %>%
group_by(indicator, standardizeddisaggregate) %>%
summarize_at(vars(contains("fy2017q"), fy2017apr), ~sum(., na.rm = TRUE)) %>%
ungroup()
read_excel(file.path(loc, "SSudan PSNUxIM FactView Dec22V2.xlsx")) %>%
rename_all(tolower) %>%
group_by(indicator, standardizeddisaggregate) %>%
summarize_at(vars(contains("fy2017q"), fy2017apr), ~sum(., na.rm = TRUE)) %>%
ungroup() %>%
print(n = Inf)
1251   +  1955 +     568+     1242
source('~/GitHub/DataPack/Scripts/00_datapack_initialize.R', echo=TRUE)
df_mer %>% select(contains("q")) %>% glimpse()
df_mer %>% select(contains("q")) %>% glimpse()
df_mer %>% select(contains(c("apr", "targets")) %>% glimpse()
df_mer %>% select(contains(c("apr", "targets"))) %>% glimpse()
df_mer %>% select(contains(c("apr", "targets"))) %>% glimpse()
df_mer %>% select(contains("apr")) %>% glimpse()
df_mer %>% select(contains("apr"), contains("targets")) %>% glimpse()
df_ssd_psnuim <- read_excel(file.path(loc, "SSudan PSNUxIM FactView Dec22V2.xlsx"))
View(df_ssd_psnuim)
glimpse(df_ssd_psnuim)
df_ssd_psnuim <- read_excel(file.path(loc, "SSudan PSNUxIM FactView Dec22V2.xlsx")) %>%
rename_all(tolower) %>%
#keep data only for quaters missing in FV dataset
select(region:ismcad, fy2017q1, fy2017q2) %>%
#convert to integer for merge
mutate_at(vars(contains("q")), ~ as.integer(.),
varscontains(c("apr", "targets")), ~ as.double(.)) %>%
#convert to character for merge
mutate(mechanismid = as.character(mechanismid))
#import South Sudan's data
df_ssd_psnuim <- read_excel(file.path(loc, "SSudan PSNUxIM FactView Dec22V2.xlsx")) %>%
rename_all(tolower) %>%
#keep data only for quaters missing in FV dataset
select(region:ismcad, fy2017q1, fy2017q2) %>%
#convert to integer for merge
mutate_at(vars(contains("q")), ~ as.integer(.),
vars(contains("apr"), contains("targets")), ~ as.double(.)) %>%
#convert to character for merge
mutate(mechanismid = as.character(mechanismid))
library(tidyverse)
library(readxl)
#file path
fvdata <- "~/ICPI/Data"
df_mer <- read_rds("~/ICPI/Data/ICPI_FactView_PSNU_IM_20171222_v2_2.Rds") %>%
#select just South Sudan
filter(operatingunit == "South Sudan") %>%
#remove quarters with missing data
select(-fy2017q1, -fy2017q2) %>%
#covert to character for easier mutate later
mutate(mechanismid = as.character(mechanismid),
coarsedisaggregate = as.character(coarsedisaggregate))
df_ssd_psnuim <- read_excel(file.path(fvdata, "SSudan PSNUxIM FactView Dec22V2.xlsx")) %>%
rename_all(tolower) %>%
#convert to integer for merge
mutate_at(vars(contains("q")), ~ as.integer(.),
vars(contains("apr"), contains("targets")), ~ as.double(.))
glimpse(df_ssd_psnuim)
df_ssd_psnuim <- read_excel(file.path(fvdata, "SSudan PSNUxIM FactView Dec22V2.xlsx")) %>%
rename_all(tolower) %>%
#convert to integer/double/character for merge
mutate_at(vars(contains("q")), ~ as.integer(.),
vars(contains("apr"), contains("targets")), ~ as.double(.),
vars(mehcanismid), ~ as.character(.))
glimpse
glimpse(df_ssd_psnuim)
df_ssd_psnuim <- read_excel(file.path(fvdata, "SSudan PSNUxIM FactView Dec22V2.xlsx")) %>%
rename_all(tolower)
df_ssd_psnuim %>%
#convert to integer/double/character for merge
mutate_at(vars(contains("q")), ~ as.integer(.),
vars(contains("apr"), contains("targets")), ~ as.double(.),
vars(mehcanismid), ~ as.character(.)) %>%
glimpse()
df_ssd_psnuim %>%
#convert to integer/double/character for merge
mutate_at(vars(contains("q")), ~ as.integer(.),
vars(contains("apr")), ~ as.double(.),
vars(mehcanismid), ~ as.character(.))
df_ssd_psnuim %>%
#convert to integer/double/character for merge
mutate_at(vars(contains("q")), ~ as.integer(.),
vars(contains("apr")), ~ as.double(.),
vars(mehcanismid), ~ as.character(.)) %>%
glimpse()
df_ssd_psnuim %>%
#convert to integer/double/character for merge
mutate_at(vars(contains("q")), ~ as.integer(.),
vars(ends_with("apr")), ~ as.double(.),
vars(mehcanismid), ~ as.character(.)) %>%
glimpse()
